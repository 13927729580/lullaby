#ifndef THIRD_PARTY_LULLABY_DATA_SHADERS_PBR_SCREEN_PROJECTION_GLSLH_
#define THIRD_PARTY_LULLABY_DATA_SHADERS_PBR_SCREEN_PROJECTION_GLSLH_

// TODO(b/79370194): Switch these to directly sample using textureProj or
// textureProjLod.

// Converts model-space position to screen UV such that a any point
// within the view frustum maps to [0, 1]^2.
vec2 ModelToScreenUv(vec4 local_pos, mat4 mvp) {
  vec4 clip_pos = mvp * local_pos;
  return 0.5 * (vec2(1.0) + clip_pos.xy / clip_pos.w);
}

// Projects world_pos to screen coordinates suitable for texture
// lookup. Coordinates are clamped to [0, 1]^2, preserving direction from
// center.
vec2 WorldToClampedScreenUv(vec4 world_pos, mat4 vp) {
  vec4 clip_pos = vp * world_pos;
  vec2 ndc_pos = clip_pos.xy / clip_pos.w;
  float len = max(abs(ndc_pos.x), abs(ndc_pos.y));
  ndc_pos /= max(len, 1.0);
  return 0.5 * (vec2(1.0) + ndc_pos);
}

#endif  // THIRD_PARTY_LULLABY_DATA_SHADERS_PBR_SCREEN_PROJECTION_GLSLH_
