include "lull/lull_common.fbs";
include "lull/vertex_attribute_def.fbs";

namespace lull;

/// Supported shader data types. These are the lowest level types of data
/// represented in a shader. They are fields in a struct or buffer objects.
enum ShaderDataType : uint {
  Float1,
  Float2,
  Float3,
  Float4,
  Half1,
  Half2,
  Half3,
  Half4,
  Int1,
  Int2,
  Int3,
  Int4,
  Float3x3,
  Float4x4,
  Struct,
}

/// Supported shader uniform types. These are higher level than |ShaderDataType|
/// and may contain them in some cases.
enum ShaderUniformType : uint {
  Float1,
  Float2,
  Float3,
  Float4,
  Half1,
  Half2,
  Half3,
  Half4,
  Int1,
  Int2,
  Int3,
  Int4,
  Float3x3,
  Float4x4,
  /// Complex types that may contain |ShaderDataType| in side of them.
  Struct,
  BufferObject,
  StorageBufferObject,
  // Texture types.
  Sampler2D,
}

/// A shader data type. These are the lowest level of shader variables.
table ShaderDataDef {
  /// Name of the variable inside the shader.
  name: string;
  /// The variable data type.
  type: ShaderDataType;
  /// Length of the array if it is an array [0 = not an array].
  array_size: uint = 0;
  /// Sub data fields [only valid if |type| == Struct].
  fields: [ShaderDataDef];
}

/// Description of a shader uniform that is defined inside the shader program.
table ShaderUniformDef {
  /// Name of the uniform inside the shader.
  name: string;
  /// The uniform data type.
  type: ShaderUniformType;
  /// Length of the array if it is an array [0 = not an array].
  array_size: uint = 0;
  /// Sub data fields [only valid if |type| is Struct, BufferObject or
  ///                  StorageBufferObject].
  fields: [ShaderDataDef];
}
